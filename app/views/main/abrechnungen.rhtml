<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />

<%= stylesheet_link_tag 'scaffold' %>
<%= javascript_include_tag :defaults %>

<link href="/stylesheets/content.css" rel="stylesheet" type="text/css" />
</head>


<body>

<h1>Abrechnungen</h1>

<table cellspacing="2" cellpadding="3" class="table_input">
  <tr>
    <th>Monat</th>
    <th>Netto-Gewinn <%= ENV['first_user'] %></th>
    <th>Netto-Gewinn <%= ENV['second_user'] %></th>
    <th>Differenz / 2</th>
    <th>abgerechnet</th>
  </tr>
  
  
<%
monat_aktuell = Date.today.month
jahr_aktuell = Date.today.year

# user-ids aus db holen
first_user_id = User.find_by_login(ENV['first_user']).id.to_s
second_user_id = User.find_by_login(ENV['second_user']).id.to_s

einnahmen_first_user = Gain.find(:all, :conditions => ['user_id='+first_user_id+' and geloescht=? and bezahlt=?', false, true])
ausgaben_first_user = Expense.find(:all, :conditions => ['user_id='+first_user_id+' and geloescht=? and bezahlt=?', false, true])
einnahmen_second_user = Gain.find(:all, :conditions => ['user_id='+second_user_id+' and geloescht=? and bezahlt=?', false, true])
ausgaben_second_user = Expense.find(:all, :conditions => ['user_id='+second_user_id+' and geloescht=? and bezahlt=?', false, true])

monat_aktuell.downto(1) do |x|
  dat = Date.strptime(jahr_aktuell.to_s + '-' + x.to_s + '-' + '01')
  if x == 12
    dat_end = Date.strptime((jahr_aktuell + 1).to_s + '-01-' + '01')
  else
    dat_end = Date.strptime(jahr_aktuell.to_s + '-' + (x + 1).to_s + '-' + '01')
  end
  
  summe_einnahmen_first_user = 0
  einnahmen_first_user.each do |j|
    if (j.datum >= dat) && (j.datum < dat_end)
      summe_einnahmen_first_user += j.netto
    end
  end
  
  summe_ausgaben_first_user = 0
  ausgaben_first_user.each do |j|
    if (j.datum >= dat) && (j.datum < dat_end)
      summe_ausgaben_first_user += j.netto
    end
  end
  
  summe_einnahmen_second_user = 0
  einnahmen_second_user.each do |j|
    if (j.datum >= dat) && (j.datum < dat_end)
      summe_einnahmen_second_user += j.netto
    end
  end
  
  summe_ausgaben_second_user = 0
  ausgaben_second_user.each do |j|
    if (j.datum >= dat) && (j.datum < dat_end)
      summe_ausgaben_second_user += j.netto
    end
  end
  
  gewinn_first_user = summe_einnahmen_first_user - summe_ausgaben_first_user
  gewinn_second_user = summe_einnahmen_second_user - summe_ausgaben_second_user
  
  %>
  <% if Statement.find_by_name(dat.to_s + ',' + dat_end.to_s) %>
    <tr style="color:#ccccaa">
  <% else %>
    <tr>
  <% end %>
   <td><%= dat.strftime("%B %Y") %></td>
   <td><%= MoreMoney::Money.new(gewinn_first_user *100, 'EUR').format(:with_thousands) %></td>
   <td><%= MoreMoney::Money.new(gewinn_second_user *100, 'EUR').format(:with_thousands) %></td>
   <td><%= MoreMoney::Money.new( ((gewinn_second_user - gewinn_first_user).abs / 2) *100, 'EUR').format(:with_thousands) %></td>
   <% if abr = Statement.find_by_name(dat.to_s + ',' + dat_end.to_s) %>
     <td><%= abr.erstellungsdatum.strftime("%d. %B %Y") %></td> 
   <% else %>
     <% if x != monat_aktuell %>
     <td><%= link_to 'abrechnen', :action => 'abrechnen', :id => CGI::escape(dat.to_s + ',' + dat_end.to_s) %></td>
     <% end %>
   <% end %>
  </tr>
  <%
end


if @erstes_jahr < jahr_aktuell

(jahr_aktuell - 1).downto(@erstes_jahr + 1) do |x|
  12.downto(1) do |y|
    dat = Date.strptime(x.to_s + '-' + y.to_s + '-' + '01')
    if y == 12
      dat_end = Date.strptime((x + 1).to_s + '-01-' + '01')
    else
      dat_end = Date.strptime(x.to_s + '-' + (y + 1).to_s + '-' + '01')
    end
    
    summe_einnahmen_first_user = 0
    einnahmen_first_user.each do |j|
      if (j.datum >= dat) && (j.datum < dat_end)
        summe_einnahmen_first_user += j.netto
      end
    end
  
    summe_ausgaben_first_user = 0
    ausgaben_first_user.each do |j|
      if (j.datum >= dat) && (j.datum < dat_end)
        summe_ausgaben_first_user += j.netto
      end
    end
  
    summe_einnahmen_second_user = 0
    einnahmen_second_user.each do |j|
      if (j.datum >= dat) && (j.datum < dat_end)
        summe_einnahmen_second_user += j.netto
      end
    end
  
    summe_ausgaben_second_user = 0
    ausgaben_second_user.each do |j|
      if (j.datum >= dat) && (j.datum < dat_end)
        summe_ausgaben_second_user += j.netto
      end
    end
  
    gewinn_first_user = summe_einnahmen_first_user - summe_ausgaben_first_user
    gewinn_second_user = summe_einnahmen_second_user - summe_ausgaben_second_user
    
    %>
    <% if abr = Statement.find_by_name(dat.to_s + ',' + dat_end.to_s) %>
      <tr style="color:#ccccaa">
    <% else %>
      <tr>
    <% end %>
     <td><%= dat.strftime("%B %Y") %></td>
     <td><%= MoreMoney::Money.new(gewinn_first_user *100, 'EUR').format(:with_thousands) %></td>
     <td><%= MoreMoney::Money.new(gewinn_second_user *100, 'EUR').format(:with_thousands) %></td>
     <td><%= MoreMoney::Money.new( ((gewinn_second_user - gewinn_first_user).abs / 2) *100, 'EUR').format(:with_thousands) %></td>
     <% if abr = Statement.find_by_name(dat.to_s + ',' + dat_end.to_s) %>
       <td><%= abr.erstellungsdatum.strftime("%d. %B %Y") %></td> 
     <% else %>
       <td><%= link_to 'abrechnen', :action => 'abrechnen', :id => CGI::escape(dat.to_s + ',' + dat_end.to_s) %></td>
     <% end %>
    </tr>
    <%
  end
end
  
12.downto(@erster_monat) do |x|
  dat = Date.strptime(@erstes_jahr.to_s + '-' + x.to_s + '-' + '01')
  if x == 12
    dat_end = Date.strptime((@erstes_jahr + 1).to_s + '-01-' + '01')
  else
    dat_end = Date.strptime(@erstes_jahr.to_s + '-' + (x + 1).to_s + '-' + '01')
  end
  
  summe_einnahmen_first_user = 0
  einnahmen_first_user.each do |j|
    if (j.datum >= dat) && (j.datum < dat_end)
      summe_einnahmen_first_user += j.netto
    end
  end
  
  summe_ausgaben_first_user = 0
  ausgaben_first_user.each do |j|
    if (j.datum >= dat) && (j.datum < dat_end)
      summe_ausgaben_first_user += j.netto
    end
  end
  
  summe_einnahmen_second_user = 0
  einnahmen_second_user.each do |j|
    if (j.datum >= dat) && (j.datum < dat_end)
      summe_einnahmen_second_user += j.netto
    end
  end
  
  summe_ausgaben_second_user = 0
  ausgaben_second_user.each do |j|
    if (j.datum >= dat) && (j.datum < dat_end)
      summe_ausgaben_second_user += j.netto
    end
  end
  
  gewinn_first_user = summe_einnahmen_first_user - summe_ausgaben_first_user
  gewinn_second_user = summe_einnahmen_second_user - summe_ausgaben_second_user
  

  %>
  <% if abr = Statement.find_by_name(dat.to_s + ',' + dat_end.to_s) %>
    <tr style="color:#ccccaa">
  <% else %>
    <tr>
  <% end %>
   <td><%= dat.strftime("%B %Y") %></td>
   <td><%= MoreMoney::Money.new(gewinn_first_user *100, 'EUR').format(:with_thousands) %></td>
   <td><%= MoreMoney::Money.new(gewinn_second_user *100, 'EUR').format(:with_thousands) %></td>
   <td><%= MoreMoney::Money.new( ((gewinn_second_user - gewinn_first_user).abs / 2) *100, 'EUR').format(:with_thousands) %></td>
   <% if abr = Statement.find_by_name(dat.to_s + ',' + dat_end.to_s) %>
     <td><%= abr.erstellungsdatum.strftime("%d. %B %Y") %></td> 
   <% else %>
     <td><%= link_to 'abrechnen', :action => 'abrechnen', :id => CGI::escape(dat.to_s + ',' + dat_end.to_s) %></td>
   <% end %>
  </tr>
  <%
end 

end 
  
%>
</table>



</body>
</html>
